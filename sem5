//task1
#include <stdio.h>
int search (char s1[256], char s2[256], int c1, int c2){
    for (int i=0; i<c2; i++){
        
        for(int j=0; j<c1; j++){
            if(s1[j] == s2[i])
                return j;
        }
    }
    return -1;
}
int main()
{
    char s1[256], s2[256];
    int c1=0, c2=0;
    while((s1[c1] = getchar()) != '\n'){
        c1++;
    }
    s1[c1] = '\0';
    while((s2[c2] = getchar()) != '\n'){
        c2++;
    }
    s2[c2] = '\0';
    printf("%d", search(s1,s2,c1,c2));

    return 0;
}

//update
#include <stdio.h>
int search(char s1[], char s2[]);
int main()
{
    char s1[100], s2[100];
    scanf("%s %s", s1,s2);
    printf("%d", search(s1,s2));
    return 0;
}
int search(char s1[], char s2[]){
    for(int i = 0; s1[i]!='\0'; i++){
        for(int j = 0; s2[j]!='\0'; i++){
            if(s1[i] == s2[j]){
                return i;
            }
        }
    }
    return -1;
}
//task2

#include <stdio.h>
#include <math.h>
float calc(float,float,char);
int main()
{
    
    float a,b;
    char s;
    for(int i=0; i<10; i++){
        scanf("%f%c%f",&a,&s,&b);
        printf("%.1f",calc(a,b,s));
    }
    
}

float calc(float a, float b, char s){
    float res = 1;
    //printf("%f%c%f\n", a, s, b);
    switch (s){
        case '+': res =a+b; break;
        case '-': res =a-b; break;
        case '/': res =a/b; break;
        case '*': res =a*b; break;
        case '%': res =(int)a%(int)b; break;
        case '^':
            for(int i =0; i<b; i++)
                res *= a;
            break;
        case 's': res = sin(b); break;
        case 'c': res = cos(b); break;
        default :
            printf("unknown symbol");
            break;
    }
    
    return res;
}
// Калькулятор v2
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define LASTDIGIT 10
#define LASTOPERATOR 9

char *findoperator(char s[]);
int *finddigit(char s[]);
void calculate(int[], char[]);
int main()
{
    char input[100];
    char c;
    int *digits;
    char *operators;
    
    printf("put some digitals and operators:\n");
    scanf("%[^\n]", input);
    digits = finddigit(input);
    printf("\n");
    operators = findoperator(input);
    calculate(digits, operators);
    return 0;
}
char *findoperator(char s[]){
    char output[LASTOPERATOR];
    char *out;
    int counter = 0;
    for (int i = 0;; i++){
        if(counter>LASTOPERATOR) break;
        switch(s[i]){
            case '+': 
                output[counter++] = s[i]; 
                break;
            case '-': 
                output[counter++] = s[i]; 
                break;
            case '*': 
                output[counter++] = s[i]; 
                break;
            case '/': 
                output[counter++] = s[i]; 
                break;
            case 'c': 
                output[counter++] = s[i];
                break;
            case 's': 
                output[counter++] = s[i]; 
                break;
            case '^': 
                output[counter++] = s[i]; 
                break;
            case '%': 
                output[counter++] = s[i]; 
                break;
        }
        if(s[i] == '\0'){
            break;
        }
    }
    out = calloc(counter+1, sizeof(char));
    for (int i = 0; i<counter; i++){
        out[i] = output[i];
        printf("%c ", output[i]);
    }
    out[counter] = '\0';
    return out;
}
int *finddigit(char s[]){
    int output[LASTDIGIT];
    int *out;
    int counter = 0;
    int temp = 0;
    for (int i = 0; ; i++){
        if ('0'<=s[i] && s[i]<='9'){
            temp = temp*10+(s[i] - '0');
        }
        if (s[i] == ' ' || s[i] == '\0'){
            if (temp != 0){
                if(counter>LASTDIGIT){
                    printf("Error. Too many digits");
                }
                output[counter] = temp;
                printf("%d ", output[counter]);
                counter++;
                temp = 0;
            }
        }
        if(s[i] == '\0'){
            break;
        }
    }
    out = calloc(counter+1, sizeof(int));
    for(int i = 0; i<counter; i++){
        out[i] = output[i];
    }
    out[counter] = 0;
    return out;
}
void calculate(int d[], char o[]){
    float out = d[0];
    int c = 1;
    for( int i = 0; d[c]!=0, o[i]!='\0'; i++){
        switch(o[i]){
            case '+': 
                out += d[c++]; 
                break;
            case '-': 
                out -= d[c++]; 
                break;
            case '*': 
                out *= d[c++];
                break;
            case '/': 
                out /= d[c++]; 
                break;
            case 'c': 
                out = cos(out);
                break;
            case 's': 
                out = sin(out);
                break;
            case '^': 
                out = pow(out, d[c++]);
                break;
            case '%': 
                //printf("%0.1f % %d = %d\n",out,d[c++],out%d[c++]);
                printf(" i can't mod");
                break;
        }
    }
    printf("\nout = %f ", out);
}
