//task1
#include <stdio.h>
#include <stdlib.h>
void ShellSort (int* array, int size)               // * ∆k = (b∆k−1)/2  ∆0 = N
{
	int step, i, j, tmp;
	//сортировка Шелла скопированнная из википедии и переделанная мной под указатели? зачем,)))
	// Выбор шага
	for (step = size / 2; step > 0; step /= 2)
	    // Перечисление элементов, которые сортируются на определённом шаге
		for (i = step; i < size; i++) 
		    // Перестановка элементов внутри подсписка, пока i-тый не будет отсортирован
			for (j = i - step; j >= 0 && *(array+j) > *(array + j + step); j -= step)
			{
				tmp = *(array+j);
				array[j] = *(array + j + step);
				*(array + j + step) = tmp;
			}
}
int main()
{
    int length;
    int temp;
    scanf("%d", &length);
    int* arr = (int*) malloc(length*sizeof(int));
    scanf("%d", &temp); *arr = temp;
    for(int j = 1; j<length; j++){
        scanf("%d", &temp);
        *(arr+j) = temp;
    }
    ShellSort(arr, length);
    for (int i=0; i<length; i++){
        printf("%d ", *(arr+i));
    }
    return 0;
}

//task2
//суть в том, что я каждый раз переписываю значения в новый массив, по идее можно реализовать через указатели
#include <stdio.h>
#include <stdlib.h>
int main()
{
    char* s1;
    char* s2;
    char s, i;
    for(i = 0;(s=getchar())!='*'; i++){
       if(i%2 == 0){
            s1 = (char*) malloc(sizeof(char)*(i+1));
            for(int j = 0; j<i; j++){
                *(s1+j) = *(s2+j);
            }
            *(s1+i) = s;
       } 
       else{
            s2 = (char*) malloc(sizeof(char)*(i+1));
            for(int j = 0; j<i; j++){
                *(s2+j) = *(s1+j);
            }
            *(s2+i) = s;
       }
    }
    for(int x = 0; x<i; x++){
        putchar(*(s2+x));
    }
    return 0;
}
// task2
#include <stdio.h>
#include <stdlib.h>
int main()
{
    char *s;
    char c;
    for(int i = 0; (c = getchar()) != '\n'; i++){
        s = (char*)realloc(s ,i*sizeof(char));
        s[i] = c;
    }
    printf("%s", s);
    free(s);
    return 0;
}
