//task1
#include <stdio.h>
#include <stdlib.h>
int strend(char *s1,char *s2);
int main()
{
    char s1[100], s2[100];
    scanf("%s %s", s1,s2);
    printf("%d", strend(s1,s2));
    return 0;
}
int strend(char *s1,char *s2){
    int da = 1;//флажок, если он иззменится, то строки не равны
    int l1 = 0, l2 = 0;
    for(l1 =0; s1[l1]!='\0'; l1++){//ДЛИНА МАССИВА 1
    }
    for(l2 =0; s2[l2]!='\0'; l2++){//ДЛИНА МАССИВА 2
    }
    if(l1>l2){
        for(int i = (l1 - l2), j = 0; i<l1; i++, j++){//идем от последних символов первого и с начала второго
            printf("%c %c\n", s1[i], s2[j]);//отладка
            if(s1[i]!=s2[j]){
                da-=1;
            }
        }
    }
    else{//если вторая строка больше первой - некорректный ввод
        return -1;
    }
    if(da == 1) 
        return 1; 
    else 
        return -1;
}


//task2
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void stringsort(char**, int);
int main()
{
    int n, i;
    char **strings;
    char *s;
    char c;
    scanf("%d\n", &n);
    strings = (char**) calloc(n+1, sizeof(char*));
    for(int j = 0; j<n; j++){
        s = (char*)malloc(sizeof(char));
        for(int i = 0; ((c = getchar()) != ' ') && (c!='\n'); i++){
            s = (char*)realloc(s ,(i+1)*sizeof(char));
            s[i] = c;
        }
        strings[j] = s;
    }
    stringsort(strings, n);
    for(i = 0; i<n; i++)
        printf("%s ", strings[i]);
    return 0;
}
void stringsort(char **strings, int n){
    int step, i, j;
    char *tmp;
    for (step = n / 2; step > 0; step /= 2)
	    // Перечисление элементов, которые сортируются на определённом шаге
		for (i = step; i < n; i++) 
		    // Перестановка элементов внутри подсписка, пока i-тый не будет отсортирован
			for (j = i - step; j >= 0 && strlen(strings[j]) > strlen(strings[j+step]); j -= step)
			{
				tmp = strings[j];
				strings[j] = strings[j+step];
				strings[j+step] = tmp;
			}
}
